server {
    listen 8089 default_server;
    listen [::]:8089 default_server;

    server_name _;
	access_log /dev/stdout;

    # include /config/nginx/ssl.conf;

    # set $root /app/www/public;
    # if (!-d /app/www/public) {
    #     set $root /config/www;
    # }
    # root $root;
    root /var/www;
    index index.html index.htm index.php;

    # location / {
    #     # enable for basic auth
    #     auth_basic "Restricted";
    #     auth_basic_user_file /config/nginx/.htpasswd;
    #
    #     try_files $uri $uri/ /index.html /index.htm /index.php$is_args$args;
    # }
	location /dav {
		# Authentication
		satisfy all; 
		auth_basic Restricted;
		auth_basic_user_file /config/nginx/.htpasswd;

		# WebDAV
		autoindex on;
		dav_methods PUT DELETE MKCOL COPY MOVE;
		dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;
		# dav_ext_lock zone=default;

		# Permissions
		dav_access user:rw;
		create_full_put_path on;
		client_body_temp_path /var/tmp/nginx;
		client_max_body_size 100M;

		# Enable creating directories without trailing slash (MacOS compatibility)
		# https://github.com/arut/nginx-dav-ext-module#example-3
		set $x $uri$request_method;
		if ($x ~ [^/]MKCOL$) {
			rewrite ^(.*)$ $1/;
		}

		# Fix DAV header to increase compatbility with davfs2
		# https://github.com/arut/nginx-dav-ext-module/pull/46
		if ($request_method = OPTIONS) {
			add_header DAV '1, 2';
		}
	}

	location /health {
		return 200 'ok';
		add_header Content-Type text/plain;
	}

    # deny access to .htaccess/.htpasswd files
    location ~ /\.ht {
        deny all;
    }
}
